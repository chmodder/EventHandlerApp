<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EventHandlerApp.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ViewModel="using:EventHandlerApp.ViewModel"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:validationControl="using:WinUX.Xaml.Controls.Validation"
    xmlns:validation="using:WinUX.Validation"
    xmlns:rules="using:WinUX.Validation.Rules"
    xmlns:converters="using:EventHandlerApp.Converters"
    xmlns:converters1="using:WinUX.Xaml.Converters"
    x:Class="EventHandlerApp.View.CreateEventPage"
    mc:Ignorable="d">

    <Page.DataContext>
        <ViewModel:EventViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <Page.Resources>
        <validation:ValidationRules x:Key="IsInt">
            <validation:ValidationRules.Rules>
                <rules:IntValidationRule />
            </validation:ValidationRules.Rules>
        </validation:ValidationRules>
        <validation:ValidationRules x:Key="IsMaxLength">
            <validation:ValidationRules.Rules>
                <rules:CharacterLimitValidationRule
                    MinLength="2" 
                    MaxLength="50"/>
            </validation:ValidationRules.Rules>
        </validation:ValidationRules>
            <converters1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NumberConverter x:Name="NumberConverter"/>
    </Page.Resources>


    <Grid Background="#FF6E7074">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="6*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            
            <TextBlock Text="Add event" Grid.ColumnSpan="3" Margin="0,15,0,20" HorizontalAlignment="Center" Style="{ThemeResource HeaderTextBlockStyle}" FontWeight="Bold"/>

            <validationControl:ValidatingTextBox x:Name="IdTextBox" Header="Id" IsMandatory="True" IsInvalid="{Binding IsInValidId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Text="{x:Bind ViewModel.Id, Mode=TwoWay, Converter={StaticResource NumberConverter}}"  Grid.Column="1" Grid.Row="1" Margin="5,0,0,10" ValidationRules="{StaticResource IsInt}"/>

            <validationControl:ValidatingTextBox Header="Name"  IsMandatory="True" IsInvalid="{Binding IsInValidName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{x:Bind ViewModel.Name, Mode=TwoWay}" Grid.Column="1" Grid.Row="2" Margin="5,0,0,10" InputScope="Text" ValidationRules="{StaticResource IsMaxLength}"/>

            <validationControl:ValidatingTextBox Header="Description"  IsMandatory="True" IsInvalid="{Binding IsInValidDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{x:Bind ViewModel.Description, Mode=TwoWay}" Grid.Column="1" Grid.Row="3" Margin="5,0,0,10" InputScope="Text" ValidationRules="{StaticResource IsMaxLength}"/>

            <validationControl:ValidatingTextBox Header="Place"  IsMandatory="True"  IsInvalid="{Binding IsInValidPlace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Text="{x:Bind ViewModel.Place, Mode=TwoWay}" Grid.Column="1" Grid.Row="4" Margin="5,0,0,10" InputScope="Text"  ValidationRules="{StaticResource IsMaxLength}"/>

            <DatePicker Header="Date" Date="{x:Bind ViewModel.Date, Mode=TwoWay}" Grid.Column="1" Grid.Row="5"  Margin="5,0,0,10"/>

            <TimePicker Header="Time"  Time="{x:Bind ViewModel.Time, Mode=TwoWay}" Grid.Column="1" Grid.Row="6" Margin="5,0,0,10"/>

            <Button Grid.Column="1" Grid.Row="7" Content="Add" Visibility="{Binding IsValidAll, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10" Background="#FF595A5D" Click="{x:Bind ViewModel.EventHandler.CreateEventAsync}">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Click">
                        <Core:NavigateToPageAction TargetPage="EventHandlerApp.View.EventPage"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Button>


            
        </Grid>
    </Grid>
    
    
</Page>
